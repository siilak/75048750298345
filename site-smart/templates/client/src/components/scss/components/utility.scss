// Name:            Utility
// Description:     Utilities collection
//
// Component:       `tele2-panel-*`
//                  `tele2-clearfix`
//                  `tele2-float-*`
//                  `tele2-overflow-*`
//                  `tele2-resize-*`
//                  `tele2-display-*`
//                  `tele2-inline-*`
//                  `tele2-height-*`
//                  `tele2-responsive-*`
//                  `tele2-preserve-width`
//                  `tele2-border-*`
//                  `tele2-box-shadow-*`
//                  `tele2-box-shadow-bottom`
//                  `tele2-dropcap`
//                  `tele2-leader`
//                  `tele2-logo`
//                  `tele2-svg`
//                  `tele2-blend-*`
//                  `tele2-transform-*`
//                  `tele2-transform-origin-*`
//
// States:          `tele2-disabled`
//                  `tele2-drag`
//                  `tele2-dragover`
//                  `tele2-preserve`
//
// ========================================================================


// Variables
// ========================================================================

$panel-scrollable-height:                        170px !default;
$panel-scrollable-padding:                       10px !default;
$panel-scrollable-border-width:                  $global-border-width !default;
$panel-scrollable-border:                        $global-border !default;

$height-small-height:                            150px !default;
$height-medium-height:                           300px !default;
$height-large-height:                            450px !default;

$border-rounded-border-radius:                   5px !default;

$box-shadow-duration:                            0.1s !default;

$box-shadow-bottom-height:                       30px !default;
$box-shadow-bottom-border-radius:                100% !default;
$box-shadow-bottom-background:                   #444 !default;
$box-shadow-bottom-blur:                         20px !default;

$dropcap-margin-right:                           10px !default;
$dropcap-font-size:                              (($global-line-height * 3) * 1em) !default;

$leader-fill-content:                            '.' !default;
$leader-fill-margin-left:                        $global-small-gutter !default;

$logo-font-size:                                 $global-large-font-size !default;
$logo-font-family:                               $global-font-family !default;
$logo-color:                                     $global-color !default;
$logo-hover-color:                               $global-color !default;

$dragover-box-shadow:                            0 0 20px rgba(100,100,100,0.3) !default;


/* ========================================================================
   Component: Utility
 ========================================================================== */


/* Panel
 ========================================================================== */

.tele2-panel {
    position: relative;
    box-sizing: border-box;
}

/*
 * Micro clearfix
 */

.tele2-panel::before,
.tele2-panel::after {
    content: "";
    display: table;
}

.tele2-panel::after { clear: both; }

/*
 * Remove margin from the last-child
 */

.tele2-panel > :last-child { margin-bottom: 0; }


/*
 * Scrollable
 */

.tele2-panel-scrollable {
    height: $panel-scrollable-height;
    padding: $panel-scrollable-padding;
    border: $panel-scrollable-border-width solid $panel-scrollable-border;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    resize: both;
    @if(mixin-exists(hook-panel-scrollable)) {@include hook-panel-scrollable();}
}


/* Clearfix
 ========================================================================== */

/*
 * 1. `table-cell` is used with `::before` because `table` creates a 1px gap when it becomes a flex item, only in Webkit
 * 2. `table` is used again with `::after` because `clear` only works with block elements.
 * Note: `display: block` with `overflow: hidden` is currently not working in the latest Safari
 */

/* 1 */
.tele2-clearfix::before {
    content: "";
    display: table-cell;
}

/* 2 */
.tele2-clearfix::after {
    content: "";
    display: table;
    clear: both;
}


/* Float
 ========================================================================== */

/*
 * 1. Prevent content overflow
 */

.tele2-float-left { float: left; }
.tele2-float-right { float: right; }

/* 1 */
[class*='tele2-float-'] { max-width: 100%; }


/* Overfow
 ========================================================================== */

.tele2-overflow-hidden { overflow: hidden; }

/*
 * Enable scrollbars if content is clipped
 */

.tele2-overflow-auto {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
}

.tele2-overflow-auto > :last-child { margin-bottom: 0; }


/* Resize
 ========================================================================== */

.tele2-resize { resize: both; }
.tele2-resize-vertical { resize: vertical; }


/* Display
 ========================================================================== */

.tele2-display-block { display: block !important; }
.tele2-display-inline { display: inline !important; }
.tele2-display-inline-block { display: inline-block !important; }


/* Inline
 ========================================================================== */

/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Behave like most inline-block elements
 * 5. Force hardware acceleration without creating a new stacking context
 *    to fix 1px glitch when combined with overlays and transitions in Webkit
 * 6. Clip child elements
 */

[class*='tele2-inline'] {
    /* 1 */
    display: inline-block;
    /* 2 */
    position: relative;
    /* 3 */
    max-width: 100%;
    /* 4 */
    vertical-align: middle;
    /* 5 */
    -webkit-backface-visibility: hidden;
}

.tele2-inline-clip {
    /* 6 */
    overflow: hidden;
}


/* Height
 ========================================================================== */

[class*='tele2-height'] { box-sizing: border-box; }

/*
 * Only works if parent element has a height set
 */

.tele2-height-1-1 { height: 100%; }

/*
 * Useful to create image teasers
 */

.tele2-height-viewport { min-height: 100vh; }

/*
 * Pixel
 * Useful for `overflow: auto`
 */

.tele2-height-small { height: $height-small-height; }
.tele2-height-medium { height: $height-medium-height; }
.tele2-height-large { height: $height-large-height; }

.tele2-height-max-small { max-height: $height-small-height; }
.tele2-height-max-medium { max-height: $height-medium-height; }
.tele2-height-max-large { max-height: $height-large-height; }


/* Responsive objects
 ========================================================================== */

/*
 * Preserve original dimensions
 * Because `img, `video`, `canvas` and  `audio` are already responsive by default, see Base component
 */

.tele2-preserve-width,
.tele2-preserve-width audio,
.tele2-preserve-width canvas,
.tele2-preserve-width img,
.tele2-preserve-width svg,
.tele2-preserve-width video { max-width: none; }

/*
 * Responsiveness
 * Corrects `max-width` and `max-height` behavior if padding and border are used
 */

.tele2-responsive-width,
.tele2-responsive-height { box-sizing: border-box; }

/*
 * 1. Set a maximum width. `important` needed to override `tele2-preserve-width img`
 * 2. Auto scale the height. Only needed if `height` attribute is present
 */

.tele2-responsive-width {
    /* 1 */
    max-width: 100% !important;
    /* 2 */
    height: auto;
}

/*
 * 1. Set a maximum height. Only works if the parent element has a fixed height
 * 2. Auto scale the width. Only needed if `width` attribute is present
 * 3. Reset max-width, which `img, `video`, `canvas` and  `audio` already have by default
 */

.tele2-responsive-height {
    /* 1 */
    max-height: 100%;
    /* 2 */
    width: auto;
    /* 3 */
    max-width: none;
}


/* Border
 ========================================================================== */

.tele2-border-circle { border-radius: 50%; }
.tele2-border-rounded { border-radius: $border-rounded-border-radius; }

/*
 * Fix `overflow: hidden` to be ignored with border-radius and CSS transforms in Webkit
 */

.tele2-inline-clip[class*='tele2-border-'] { -webkit-transform: translateZ(0); }


/* Box-shadow
 ========================================================================== */

.tele2-box-shadow-small { box-shadow: $global-small-box-shadow; }
.tele2-box-shadow-medium { box-shadow: $global-medium-box-shadow; }
.tele2-box-shadow-large { box-shadow: $global-large-box-shadow; }
.tele2-box-shadow-xlarge { box-shadow: $global-xlarge-box-shadow; }

/*
 * Hover
 */

[class*='tele2-box-shadow-hover'] {
    -webkit-transition: box-shadow $box-shadow-duration ease-in-out;
    transition: box-shadow $box-shadow-duration ease-in-out;
}

.tele2-box-shadow-hover-small:hover { box-shadow: $global-small-box-shadow; }
.tele2-box-shadow-hover-medium:hover { box-shadow: $global-medium-box-shadow; }
.tele2-box-shadow-hover-large:hover { box-shadow: $global-large-box-shadow; }
.tele2-box-shadow-hover-xlarge:hover { box-shadow: $global-xlarge-box-shadow; }


/* Box-shadow bottom
 ========================================================================== */

/*
 * 1. Set position.
 * 2. Set style
 * 3. Blur doesn't work on pseudo elements with negative `z-index` in Edge.
 *    Solved by using `before` and add position context to child elements.
 */

@supports (filter: blur(0)) or (-webkit-filter: blur(0)) {

    .tele2-box-shadow-bottom {
        display: inline-block;
        position: relative;
        max-width: 100%;
        vertical-align: middle;
    }

    .tele2-box-shadow-bottom::before {
        content: '';
        /* 1 */
        position: absolute;
        bottom: (-$box-shadow-bottom-height);
        left: 0;
        right: 0;
        /* 2 */
        height: $box-shadow-bottom-height;
        border-radius: $box-shadow-bottom-border-radius;
        background: $box-shadow-bottom-background;
        -webkit-filter: blur($box-shadow-bottom-blur);
        filter: blur($box-shadow-bottom-blur);
        @if(mixin-exists(hook-box-shadow-bottom)) {@include hook-box-shadow-bottom();}
    }

    /* 3 */
    .tele2-box-shadow-bottom > * { position: relative; }

}


/* Drop cap
 ========================================================================== */

.tele2-dropcap::first-letter,
.tele2-dropcap > p:first-of-type::first-letter {
    display: block;
    margin-right: $dropcap-margin-right;
    float: left;
    font-size: $dropcap-font-size;
    line-height: 1;
    @if(mixin-exists(hook-dropcap)) {@include hook-dropcap();}
}


/* Leader
 ========================================================================== */

.tele2-leader { overflow: hidden; }

/*
 * 1. Place element in text flow
 * 2. Never break into a new line
 * 3. Get a string back with as many repeating characters to fill the container
 * 4. Prevent wrapping. Overflowing characters will be clipped by the container
 */

.tele2-leader-fill::after {
    /* 1 */
    display: inline-block;
    margin-left: $leader-fill-margin-left;
    /* 2 */
    width: 0;
    /* 3 */
    content: attr(data-fill);
    /* 4 */
    white-space: nowrap;
    @if(mixin-exists(hook-leader)) {@include hook-leader();}
}

/*
 * Hide if media does not match
 */

.tele2-leader-fill.tele2-leader-hide::after { display: none; }

/* Pass fill character to JS */
.var-leader-fill:before { content: $leader-fill-content; }


/* Logo
 ========================================================================== */

/*
 * 1. Required for `a`
 */

.tele2-logo {
    font-size: $logo-font-size;
    font-family: $logo-font-family;
    color: $logo-color;
    /* 1 */
    text-decoration: none;
    @if(mixin-exists(hook-logo)) {@include hook-logo();}
}

/* Hover + Focus */
.tele2-logo:hover,
.tele2-logo:focus {
    color: $logo-hover-color;
    outline: none;
    /* 1 */
    text-decoration: none;
    @if(mixin-exists(hook-logo-hover)) {@include hook-logo-hover();}
}

.tele2-logo-inverse { display: none; }


/* SVG
 ========================================================================== */

/*
 * 1. Fill all SVG elements with the current text color if no `fill` attribute is set
 * 2. Set the fill and stroke color of all SVG elements to the current text color
 * 3. Fix for uppercase attribute names in Edge. Will be fixed in Windows 10 builds 16251+
 */

/* 1 */
.tele2-svg,
/* 2 */
.tele2-svg:not(.tele2-preserve) [fill*='#']:not(.tele2-preserve),
.tele2-svg:not(.tele2-preserve) [FILL*='#']:not(.tele2-preserve) { fill: currentcolor; } // 3
.tele2-svg:not(.tele2-preserve) [stroke*='#']:not(.tele2-preserve),
.tele2-svg:not(.tele2-preserve) [STROKE*='#']:not(.tele2-preserve) { stroke: currentcolor; } // 3

/*
 * Fix Firefox blurry SVG rendering: https://bugzilla.mozilla.org/show_bug.cgi?id=1046835
 */

.tele2-svg { transform: translate(0,0); }


/* Disabled State
 ========================================================================== */

.tele2-disabled { pointer-events: none; }


/* Drag State
 ========================================================================== */

/*
 * 1. Needed if moving over elements with have their own cursor on hover, e.g. links or buttons
 * 2. Fix dragging over iframes
 */

.tele2-drag,
/* 1 */
.tele2-drag * { cursor: move; }

/* 2 */
.tele2-drag iframe { pointer-events: none; }


/* Dragover State
 ========================================================================== */

/*
 * Create a box-shadow when dragging a file over the upload area
 */

.tele2-dragover { box-shadow: $dragover-box-shadow; }


/* Blend modes
 ========================================================================== */

.tele2-blend-multiply { mix-blend-mode: multiply; }
.tele2-blend-screen { mix-blend-mode: screen; }
.tele2-blend-overlay { mix-blend-mode: overlay; }
.tele2-blend-darken { mix-blend-mode: darken; }
.tele2-blend-lighten { mix-blend-mode: lighten; }
.tele2-blend-color-dodge { mix-blend-mode: color-dodge; }
.tele2-blend-color-burn { mix-blend-mode: color-burn; }
.tele2-blend-hard-light { mix-blend-mode: hard-light; }
.tele2-blend-soft-light { mix-blend-mode: soft-light; }
.tele2-blend-difference { mix-blend-mode: difference; }
.tele2-blend-exclusion { mix-blend-mode: exclusion; }
.tele2-blend-hue { mix-blend-mode: hue; }
.tele2-blend-saturation { mix-blend-mode: saturation; }
.tele2-blend-color { mix-blend-mode: color; }
.tele2-blend-luminosity { mix-blend-mode: luminosity; }


/* Transform
========================================================================== */

.tele2-transform-center {
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}


/* Transform Origin
========================================================================== */

.tele2-transform-origin-top-left {
     -webkit-transform-origin: 0 0;
     transform-origin: 0 0;
}

.tele2-transform-origin-top-center {
     -webkit-transform-origin: 50% 0;
     transform-origin: 50% 0;
}

.tele2-transform-origin-top-right {
     -webkit-transform-origin: 100% 0;
     transform-origin: 100% 0;
}

.tele2-transform-origin-center-left {
     -webkit-transform-origin: 0 50%;
     transform-origin: 0 50%;
}

.tele2-transform-origin-center-right {
     -webkit-transform-origin: 100% 50%;
     transform-origin: 100% 50%;
}

.tele2-transform-origin-bottom-left {
     -webkit-transform-origin: 0 100%;
     transform-origin: 0 100%;
}

.tele2-transform-origin-bottom-center {
     -webkit-transform-origin: 50% 100%;
     transform-origin: 50% 100%;
}

.tele2-transform-origin-bottom-right {
     -webkit-transform-origin: 100% 100%;
     transform-origin: 100% 100%;
}


// Hooks
// ========================================================================

@if(mixin-exists(hook-utility-misc)) {@include hook-utility-misc();}

// @mixin hook-panel-scrollable(){}
// @mixin hook-box-shadow-bottom(){}
// @mixin hook-dropcap(){}
// @mixin hook-leader(){}
// @mixin hook-logo(){}
// @mixin hook-logo-hover(){}
// @mixin hook-utility-misc(){}


// Inverse
// ========================================================================

$inverse-logo-color:                            $inverse-global-color !default;
$inverse-logo-hover-color:                      $inverse-global-color !default;



// @mixin hook-inverse-dropcap(){}
// @mixin hook-inverse-leader(){}
// @mixin hook-inverse-logo(){}
// @mixin hook-inverse-logo-hover(){}
